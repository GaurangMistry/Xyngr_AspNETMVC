@model xyngr.Models.BusinessViewModel
@Scripts.Render("~/bundles/jqueryval")
<script src="~/Scripts/Admin/Business/AddEditBusiness.js"></script>
<link rel="stylesheet" type="text/css" href="~/Content/app-assets/vendors/js/gallery/photo-swipe/photoswipe.css">
<link rel="stylesheet" type="text/css" href="~/Content/app-assets/vendors/js/gallery/photo-swipe/default-skin/default-skin.css">
<link rel="stylesheet" type="text/css" href="~/Content/app-assets/css/pages/gallery.css">
<link href="~/Content/dropzone.css" rel="stylesheet" />
<link rel="stylesheet" type="text/css" href="~/Content/app-assets/css/plugins/file-uploaders/dropzone.css">
<script src="~/Scripts/dropzone.js"></script>

<section id="basic-form-layouts">
    <div class="row match-height">
        <div class="col-md-12">
            <div class="card">
                <div class="card-header">
                    <h4 class="card-title" id="basic-layout-form">Add Venue</h4>
                    <a class="heading-elements-toggle"><i class="la la-ellipsis-v font-medium-3"></i></a>
                    <div class="heading-elements">
                        <ul class="list-inline mb-0">
                            <li><a data-action="collapse"><i class="ft-minus"></i></a></li>
                            <li><a data-action="reload"><i class="ft-rotate-cw"></i></a></li>
                            <li><a data-action="expand"><i class="ft-maximize"></i></a></li>
                            <li><a data-action="close"><i class="ft-x"></i></a></li>
                        </ul>
                    </div>
                    <div class="messageDivError" id="lblMessage"></div>
                </div>
                <div class="card-content collapse show">
                    <div class="card-body">
                        <form class="form" id="frmAddBusiness">
                            <div class="form-body">
                                <div class="row">
                                    <input type="hidden" id="hdnfileName" name="Image" />
                                    @Html.HiddenFor(model => model.BusinessID)
                                    <div class="col-md-6">
                                        <div class="form-group">
                                            <label for="ParentCategoryID">Parent Category</label>
                                            @{
                                                List<SelectListItem> listParentCategories = new List<SelectListItem>();
                                                var isselected = false;
                                                foreach (var m in Model.Categories.Where(o => o.ParentCategoryID == 0).OrderBy(o => o.CategoryName))
                                                {
                                                    if (m.ParentCategoryID == Model.ParentCategoryID)
                                                    {
                                                        isselected = true;
                                                    }
                                                    else
                                                    {
                                                        isselected = false;
                                                    }

                                                    listParentCategories.Add(new SelectListItem { Text = m.CategoryName, Value = m.CategoryID.ToString(), Selected = isselected });
                                                }
                                            }

                                            @Html.DropDownListFor(model => model.ParentCategoryID, listParentCategories, null, new { @class = "form-control" })
                                            @Html.ValidationMessageFor(model => model.ParentCategoryID, "", new { @class = "text-danger" })

                                        </div>
                                    </div>
                                    <div class="col-md-6">
                                        <label for="ddlCategory">Category</label>
                                        <select id="ddlCategory" class="form-control"></select>
                                        @Html.HiddenFor(model => model.CategoryID, new { id = "hdnCategoryID" })
                                    </div>
                                </div>
                                <div class="row">
                                    <div class="col-md-6">
                                        <div class="form-group">
                                            <label for="txtName">Name<span class="mendatory">*</span></label>
                                            @Html.TextBoxFor(model => model.Name, new { @class = "form-control", id = "txtName", placeholder = "Venue Name" })
                                            @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                    <div class="col-md-3">
                                        <div class="form-group">
                                            <label for="Status">Status</label>
                                            @{
                                                List<SelectListItem> listStatus = new List<SelectListItem>();
                                                listStatus.Add(new SelectListItem { Text = "Active", Value = "true", Selected = true });
                                                listStatus.Add(new SelectListItem { Text = "Inactive", Value = "false" });
                                            }

                                            @Html.DropDownListFor(model => model.Status, listStatus, null, new { @class = "form-control" })
                                        </div>
                                    </div>
                                </div>
                                <h4 class="form-section"><i class="la la-search"></i>Venue Banner</h4>
                                <div class="row">
                                    <div class="col-md-12">
                                        <div class="form-group">
                                            <label for="dpz-single-file">Image (1450px X 700px)</label>
                                            <div class="dropzone" id="myAwesomeDropzone" name="mainFileUploader">
                                            </div>
                                        </div>
                                    </div>
                                </div>

                                @if (ViewBag.IsEditMode)
                                {
                                    <div class="my-gallery" itemscope itemtype="http://schema.org/ImageGallery">
                                        <div class="row">
                                            <figure class="col-lg-3 col-md-6 col-12" itemprop="associatedMedia" itemscope itemtype="http://schema.org/ImageObject">
                                                <a href="@Model.ImageURL" itemprop="contentUrl" data-size="480x360">
                                                    <img class="img-thumbnail img-fluid" src="@Model.ImageURL"
                                                         itemprop="thumbnail" alt="Image description" />
                                                </a>
                                            </figure>
                                        </div>
                                    </div>
                                    <!-- Root element of PhotoSwipe. Must have class pswp. -->
                                    <div class="pswp" tabindex="-1" role="dialog" aria-hidden="true">

                                        <!-- Background of PhotoSwipe.
                                        It's a separate element as animating opacity is faster than rgba(). -->
                                        <div class="pswp__bg"></div>

                                        <!-- Slides wrapper with overflow:hidden. -->
                                        <div class="pswp__scroll-wrap">

                                            <!-- Container that holds slides.
                                            PhotoSwipe keeps only 3 of them in the DOM to save memory.
                                            Don't modify these 3 pswp__item elements, data is added later on. -->
                                            <div class="pswp__container">
                                                <div class="pswp__item"></div>
                                                <div class="pswp__item"></div>
                                                <div class="pswp__item"></div>
                                            </div>

                                            <!-- Default (PhotoSwipeUI_Default) interface on top of sliding area. Can be changed. -->
                                            <div class="pswp__ui pswp__ui--hidden">

                                                <div class="pswp__top-bar">

                                                    <!--  Controls are self-explanatory. Order can be changed. -->

                                                    <div class="pswp__counter"></div>

                                                    <button class="pswp__button pswp__button--close" title="Close (Esc)"></button>

                                                    <button class="pswp__button pswp__button--share" title="Share"></button>

                                                    <button class="pswp__button pswp__button--fs" title="Toggle fullscreen"></button>

                                                    <button class="pswp__button pswp__button--zoom" title="Zoom in/out"></button>

                                                    <!-- Preloader demo http://codepen.io/dimsemenov/pen/yyBWoR -->
                                                    <!-- element will get class pswp__preloader--active when preloader is running -->
                                                    <div class="pswp__preloader">
                                                        <div class="pswp__preloader__icn">
                                                            <div class="pswp__preloader__cut">
                                                                <div class="pswp__preloader__donut"></div>
                                                            </div>
                                                        </div>
                                                    </div>
                                                </div>

                                                <div class="pswp__share-modal pswp__share-modal--hidden pswp__single-tap">
                                                    <div class="pswp__share-tooltip"></div>
                                                </div>

                                                <button class="pswp__button pswp__button--arrow--left" title="Previous (arrow left)"></button>

                                                <button class="pswp__button pswp__button--arrow--right" title="Next (arrow right)"></button>

                                                <div class="pswp__caption">
                                                    <div class="pswp__caption__center"></div>
                                                </div>

                                            </div>

                                        </div>

                                    </div>

                                }
                                <h4 class="form-section"><i class="la la-search"></i>Meta Content for SEO</h4>
                                <div class="row">
                                    <div class="col-md-12">
                                        <div class="form-group">
                                            <label for="txtMetaAuthorContent">Meta Author Content</label>
                                            @Html.TextAreaFor(model => model.MetaAuthorContent, new { @class = "form-control", id = "txtMetaAuthorContent", placeholder = "Meta Author Content", @rows = 4 })
                                        </div>
                                    </div>
                                </div>
                                <div class="row">
                                    <div class="col-md-12">
                                        <div class="form-group">
                                            <label for="txtMetaDescContent">Meta Description Content</label>
                                            @Html.TextAreaFor(model => model.MetaDescContent, new { @class = "form-control", id = "txtMetaDescContent", placeholder = "Meta Description Content", @rows = 4 })
                                        </div>
                                    </div>
                                </div>
                                <div class="row">
                                    <div class="col-md-12">
                                        <div class="form-group">
                                            <label for="txtMetaKeyWordContent">Meta KeyWord Content</label>
                                            @Html.TextAreaFor(model => model.MetaKeyWordContent, new { @class = "form-control", id = "txtMetaKeyWordContent", placeholder = "Meta KeyWord Content", @rows = 4 })
                                        </div>
                                    </div>
                                </div>

                                <div class="form-actions right">
                                    <a href="#" onclick="window.history.back();" class="btn btn-warning mr-1"><i class="ft-x"></i> Cancel</a>
                                    <button type="button" onclick="SaveBusiness(@ViewBag.IsEditMode)" class="btn btn-primary">
                                        <i class="la la-check-square-o"></i> Save
                                    </button>
                                </div>
                            </div>
                        </form>
                    </div>
                </div>
            </div>
        </div>
    </div>
</section>
<script src="~/Content/app-assets/vendors/js/gallery/masonry/masonry.pkgd.min.js" type="text/javascript"></script>
<script src="~/Content/app-assets/vendors/js/gallery/photo-swipe/photoswipe.min.js" type="text/javascript"></script>
<script src="~/Content/app-assets/vendors/js/gallery/photo-swipe/photoswipe-ui-default.min.js" type="text/javascript"></script>
<script src="~/Content/app-assets/js/scripts/gallery/photo-swipe/photoswipe-script.js" type="text/javascript"></script>

<script>
    var myDropzone;
    Dropzone.options.myAwesomeDropzone = { // The camelized version of the ID of the form element
        // The configuration we've talked about above
        url: '/Admin/Business/FileUpload',
        autoProcessQueue: false,
        uploadMultiple: false,
        parallelUploads: 1,
        maxFiles: 1,
        addRemoveLinks: true,

        // The setting up of the dropzone
        init: function () {
            myDropzone = this;
            this.on("maxfilesexceeded", function (file) {
                this.removeFile(file);
                alert("only one file allowed to upload.")
                return;
            }); 
            this.on("sending", function (file, xhr, formData) {
                debugger;
                var filename = new Date().YYYYMMDDHHMMSS() + "." + file.name.split('.').pop();;
                $("#hdnfileName").val(filename);
                formData.append("filename", filename);
            });
        }
    }
</script>