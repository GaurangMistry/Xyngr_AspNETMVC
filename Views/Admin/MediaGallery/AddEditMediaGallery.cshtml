@model xyngr.Models.MediaGalleryViewModel
@Scripts.Render("~/bundles/jqueryval")
<script src="~/Scripts/Admin/MediaGallery/AddEditMediaGallery.js"></script>

@Html.AntiForgeryToken()
<section id="basic-form-layouts">
    <div class="row match-height">
        <div class="col-md-12">
            <div class="card">
                <div class="card-header">
                    <h4 class="card-title" id="basic-layout-form">Add Media Gallery</h4>
                    <a class="heading-elements-toggle"><i class="la la-ellipsis-v font-medium-3"></i></a>
                    <div class="heading-elements">
                        <ul class="list-inline mb-0">
                            <li><a data-action="collapse"><i class="ft-minus"></i></a></li>
                            <li><a data-action="reload"><i class="ft-rotate-cw"></i></a></li>
                            <li><a data-action="expand"><i class="ft-maximize"></i></a></li>
                            <li><a data-action="close"><i class="ft-x"></i></a></li>
                        </ul>
                    </div>
                </div>
                <div class="card-content collapse show">
                    <div class="card-body">
                        <form class="form" id="frmAddMediaGallery">
                            <div class="form-body">
                                <div class="row">
                                    @Html.HiddenFor(model => model.MediaID)
                                    <div class="col-md-6">
                                        <div class="form-group">
                                            <label for="ParentCategoryID">Venue</label>
                                            @{
                                                List<SelectListItem> listBusinessList = new List<SelectListItem>();
                                                var isselected = false;

                                                foreach (var m in Model.BusinessList)
                                                {
                                                    if (m.BusinessID == Model.BusinessID)
                                                    {
                                                        isselected = true;
                                                    }
                                                    else
                                                    {
                                                        isselected = false;
                                                    }

                                                    listBusinessList.Add(new SelectListItem { Text = m.Name, Value = m.BusinessID.ToString(), Selected = isselected });
                                                }
                                            }

                                            @Html.DropDownListFor(model => model.BusinessID, listBusinessList, null, new { @class = "form-control" })
                                            @Html.ValidationMessageFor(model => model.BusinessID, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                    <div class="col-md-6">
                                        <label for="ddlBranch">Destination</label>
                                        <select id="ddlBranch" class="form-control"></select>
                                        @Html.HiddenFor(model => model.BranchID, new { id = "hdnBranchID" })
                                    </div>
                                </div>
                                <div class="row">
                                    <div class="col-md-6">
                                        <div class="form-group">
                                            <label for="projectinput1">Video Code (Youtube video)<span class="mendatory">*</span></label>
                                            @Html.TextBoxFor(model => model.VideoCode, new { @class = "form-control", id = "txtVideoCode", placeholder = "Youtube video ID only" })
                                            @Html.ValidationMessageFor(model => model.VideoCode, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                    <div class="col-md-3">
                                        <div class="form-group">
                                            <label for="projectinput1">Status</label>
                                            @{
                                                List<SelectListItem> listStatus = new List<SelectListItem>();
                                                listStatus.Add(new SelectListItem { Text = "Active", Value = "true", Selected = true });
                                                listStatus.Add(new SelectListItem { Text = "Inactive", Value = "false" });
                                            }

                                            @Html.DropDownListFor(model => model.Status, listStatus, null, new { @class = "form-control" })
                                        </div>
                                    </div>
                                </div>

                                <div class="form-actions right">
                                    <a href="#" onclick="window.history.back();" class="btn btn-warning mr-1"><i class="ft-x"></i> Cancel</a>
                                    <button type="button" onclick="SaveMediaGallery(@ViewBag.IsEditMode)" class="btn btn-primary">
                                        <i class="la la-check-square-o"></i> Save
                                    </button>
                                </div>
                            </div>
                        </form>
                    </div>
                </div>
            </div>
        </div>
    </div>
</section>